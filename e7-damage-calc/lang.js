const i18n = {
  jp: {
    heroes: {
      achates: 'アカテス',
      adlay: 'アドレー',
      ains: 'エインズ',
      aither: 'アイテール',
      alencia: 'Alencia',
      alexa: 'アレクサ',
      all_rounder_wanda: 'All-Rounder Wanda',
      ambitious_tywin: 'Ambitious Tywin',
      angelic_montmorancy: '守護天使 モンモランシー',
      angelica: 'アンジェリカ',
      apocalypse_ravi: '黙示録 ラヴィ',
      aramintha: 'アラミンタ',
      arbiter_vildred: '執行人 ヴィルドレッド',
      armin: 'アーミン',
      arowell: 'アロウェル',
      assassin_cartuja: '暗幕殺法 カルトゥハ',
      assassin_cidd: '暗殺者 シダー',
      assassin_coli: '静寂のコリー',
      auxiliary_lots: '戮力のラッツ',
      azalea: 'アゼリア',
      baal_and_sezan: 'バアル＆セザン',
      baiken: '梅喧',
      basar: 'バサール',
      bask: 'バスク',
      batisse: 'バータス',
      bellona: 'ヴェローナ',
      benevolent_romann: 'Benevolent Romann',
      blaze_dingo: '焼尽のディンゴ',
      blood_blade_karin: '血剣のカリン',
      butcher_corps_inquisitor: 'エクスキューショナー',
      captain_rikoris: '先遣部隊長 リコリス',
      carmainerose: 'カーマイン・ローズ',
      carrot: 'キャロット',
      cartuja: 'カルトゥハ',
      cecilia: 'セシリア',
      celeste: 'セレスト',
      celestial_mercedes: '天穹のメルセデス',
      cermia: 'チェルミア',
      challenger_dominiel: '挑戦者 ドミニエル',
      champion_zerato: '勝負師 ゼラト',
      chaos_inquisitor: 'カオス教団 追跡者',
      chaos_sect_axe: 'カオス教団 重斧総長',
      charles: 'チャールズ',
      charlotte: 'シャルロッテ',
      chloe: 'クロエ',
      church_of_ilryos_axe: 'イリオス教団 斧兵',
      cidd: '暗殺者 シダー',
      clarissa: 'クラリッサ',
      coli: 'コリー',
      commander_lorina: '指揮官 ロリーナ',
      corvus: 'コルヴス',
      crescent_moon_rin: '三日月のリン',
      crimson_armin: '紅焔のアーミン',
      crozet: '暴徒 クロゼ',
      dark_corvus: '破壊者 コルヴス',
      desert_jewel_basar: '砂漠の宝石 バサール',
      destina: 'デスティーナ',
      diene: 'ディエネ',
      dingo: 'ディンゴ',
      dizzy: 'ディズィー',
      dominiel: 'ドミニエル',
      doris: 'ドリス',
      eaton: 'イートン',
      elena: 'Elena',
      elson: 'エルソン',
      enott: 'エノット',
      faithless_lidica: 'Failthless Lidica',
      falconer_kluri: '鷹狩のクルリ',
      fallen_cecilia: 'セシリア',
      fighter_maya: '戦闘人形 マヤ',
      furious: 'フューリオス',
      general_purrgis: '勇将 ファジス',
      gloomyrain: 'グルーミー・レイン',
      guider_aither: '求道者 アイテール',
      gunther: 'ギュンター',
      hataan: 'ハタン',
      haste: 'ヘイスト',
      hazel: 'ヘイゼル',
      helga: 'ヘルガ',
      hurado: 'ヒュラド',
      iseria: 'イセリア',
      jecht: 'ジェクト',
      jena: 'ジェナ',
      judge_kise: '審判者 キセ',
      judith: 'ジュディス',
      karin: 'カリン',
      kayron: 'カイロン',
      ken: 'ケン',
      khawana: 'Khawana',
      khawazu: 'カワヅ',
      kiris: 'キリス',
      kise: 'キセ',
      kitty_clarissa: '飼い猫 クラリッサ',
      kluri: 'クルリ',
      krau: 'クラウ',
      lena: 'レナ',
      leo: 'レオ',
      lidica: 'リディカ',
      lilias: 'リリアス',
      lilibet: 'リリベット',
      lorina: 'ロリーナ',
      lots: 'ラッツ',
      ludwig: 'ルートヴィヒ',
      luluca: 'ルルカ',
      luna: 'ルナ',
      maid_chloe: 'メイド クロエ',
      martial_artist_ken: '覇者 ケン',
      mascot_hazel: '生徒会広報 ヘイゼル',
      maya: 'マヤ',
      melissa: 'メリッサ',
      mercedes: 'メルセデス',
      mirsa: 'ミルサ',
      mistychain: 'ミスティー・チェイン',
      montmorancy: 'モンモランシー',
      mucacha: 'ムカチャ',
      nemunas: 'ネムナス',
      otillie: 'オティーリエ',
      pearlhorizon: 'パール・ホライゾン',
      purrgis: 'ファジス',
      pyllis: 'ピィリス',
      ras: 'ラス',
      ravi: 'ラヴィ',
      requiemroar: 'レクイエム・ロア',
      researcher_carrot: '研究者 キャロット',
      righteous_thief_roozid: '義賊のルージッド',
      rikoris: 'リコリス',
      rima: 'リマ',
      rin: 'リン',
      roaming_warrior_leo: 'さすらいの戦士 レオ',
      romann: 'ローマン',
      roozid: 'ルージット',
      rose: 'ロゼ',
      ruele_of_light: '神光のルエル',
      sage_baal_and_sezan: '賢者 バアル＆セザン',
      schuri: 'シュリ',
      shooting_star_achates: '流れ星☆アカテス',
      seaside_bellona: '浜辺のヴェローナ',
      serila: 'セリラ',
      sez: 'セズ',
      shadow_rose: '暗躍のロゼ',
      sigret: 'セクレット',
      silk: 'シルク',
      silver_blade_aramintha: '白銀のアラミンタ',
      sol: 'ソル',
      specimen_sez: '実験体 セズ',
      specter_tenebria: '幻影のテネブレア',
      surin: 'スーリン',
      sven: 'スヴェン',
      tamarinne: 'ルリ',
      taranor_guard: 'タラノル近衛隊員',
      taranor_royal_guard: 'タラノル王宮衛兵',
      tenebria: 'テネブレア',
      tieria: 'ディエリア',
      troublemaker_crozet: '暴徒 クロゼ',
      tywin: 'タイウィン',
      vildred: 'ヴィルドレッド',
      violet: 'ヴィオレタ',
      vivian: 'ビビアン',
      wanda: 'ワンダ',
      wanderer_silk: '流浪者 シルク',
      watcher_schuri: '監視者 シュリ',
      yufine: 'ユピネ',
      yuna: 'ユナ',
      zeno: 'ゼノ',
      zerato: 'ゼラト',
    },
    artifacts: {
      no_proc: 'No Artifact Proc',
      border_coin: '天命の金貨',
      daydream_joker: '白昼夢の道化師',
      draco_plate: 'ドラゴニックプレート',
      exorcist_tonfa: '闘鬼の戦具',
      elyha_knife: 'エリハの短剣',
      hell_cutter: '地獄のチェーンソー',
      iron_fan: '高貴なる鉄扇',
      kaladra: 'カルラドラ',
      portrait_of_the_saviors: 'イエラのバイオリン',
      otherworldly_machinery: '異世界の機械',
      reingar_special_drink: 'レインガル特製ドリンク',
      sigurd_scythe: 'シグルの大鎌',
      sword_of_the_morning: '黎明の剣',
      uberius_tooth: 'ユーベリウスの牙',
      wind_rider: '旋風の操手',
    },
    form: {
      nb_targets: 'Number of enemies',
      nb_hits: 'Number of hits',
      target_max_hp: 'Targets\'s Max HP',
      target_hp_pc: 'Targets\'s HP %',
      target_hp: 'Targets\'s HP',
      target_speed: 'Targets\'s Speed',
      target_nb_buff: 'Buffs on Targets',
      target_nb_debuff: 'Debuffs on Targets',
      target_has_buff: 'Target has buffs',
      target_has_debuff: 'Target has debuffs',
      target_has_bleed: 'Target has Bleed',
      target_has_sleep: 'Target has Sleep',
      target_is_stunned: 'Target is stunned',
      target_has_barrier: 'Target has Barrier',
      target_magic_nailed: 'Magic Nail on Target',
      target_nb_bleed: 'Number of Bleed on target',
      target_bleed_detonate: 'Bleed effects to Detonate',
      target_burn_detonate: 'Burn effects to Detonate',
      caster_max_hp: 'Caster\'s Max HP',
      caster_hp_pc: 'Caster\'s HP %',
      caster_hp: 'Caster\'s HP',
      caster_hp_above_50pc: 'Caster\'s HP above 50%',
      caster_defense: 'Caster\'s Defense',
      caster_defense_up: 'Increased Defense',
      caster_speed: 'Caster\'s Speed',
      caster_speed_up: 'Increased Speed',
      caster_nb_buff: 'Buffs on Caster',
      caster_full_focus: 'Full Focus',
      caster_nb_focus: 'Focus',
      caster_fighting_spirit: 'Fighting Spirit',
      caster_invincible: 'Caster is Invincible',
      caster_vigor: 'Caster has Vigor',
      caster_enrage: 'Caster has Rage',
      caster_stealth: 'Caster has Stealth',
      stack_crit_hit: 'Crit Hit Stack',
      non_attack_skill_stack_10: 'Non-Attack Skill Stack',
      attack_skill_stack_5: 'Attack Stack',
      non_attack_skill_stack_3: 'Non-Attack Skill Stack',
      turn_stack: 'Turn Stack',
      dead_people: 'People who died',
      highest_ally_attack: 'Highest Ally Attack',
      ally_atk_up: 'Ally has Increased Attack',
      ally_atk_up_great: 'Ally has Increased Attack (Great)',
      skill_tree_completed: 'Skill Tree Completed',
      s3_stack: 'S3 Stack',
      all_allies_fire: 'All Allies Fire',
      exclusive_equipment_1: 'Exclusive Equipment #1',
      exclusive_equipment_2: 'Exclusive Equipment #2',
      exclusive_equipment_3: 'Exclusive Equipment #3',
    },
    skills: {
      s1: 's1',
      s2: 's2',
      s3: 's3',
    }
  }
};

const heroName = (id) => {
  const lang = document.getElementById('root').getAttribute('lang');
  if (lang === 'en') {
    return heroes[id].name;
  } else {
    return i18n[lang].heroes[id] || heroes[id].name;
  }
};

const artifactName = (id) => {
  const lang = document.getElementById('root').getAttribute('lang');
  if (lang === 'en') {
    return artifacts[id] ? artifacts[id].name : 'No Artifact Proc';
  } else {
    return i18n[lang].artifacts[id] || artifacts[id].name;
  }
};

const formLabel = (id) => {
  console.log(id);
  const lang = document.getElementById('root').getAttribute('lang');
  if (lang === 'en') {
    return elements[id].label;
  } else {
    return i18n[lang].form[id] || elements[id].label;
  }
};

const skillId = (id) => {
  const lang = document.getElementById('root').getAttribute('lang');
  if (lang === 'en') {
    return id.toUpperCase();
  } else {
    return i18n[lang].skills[id] || id.toUpperCase();
  }
};